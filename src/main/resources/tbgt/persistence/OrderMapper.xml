<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="tbgt.persistence.OrderMapper">

    <resultMap id="resultBase" type="Order">
        <id property="id" column="id"/>
        <result property="address" column="address"/>
        <result property="orderNo" column="orderNo"/>
        <result property="contactPerson" column="contactPerson"/>
        <result property="phone" column="phone"/>
        <result property="actualPrice" column="actualPrice"/>
        <result property="soldTime" column="soldTime"/>
        <result property="agencyFee" column="agencyFee"/>
    </resultMap>

    <resultMap id="resultOrders" type="Order" extends="resultBase">
        <association property="express" column="id" javaType="Express">
            <id property="id" column="express.id"/>
            <result property="orderId" column="id"/>
            <result property="expressNo" column="expressNo"/>
            <result property="fee" column="fee"/>
            <result property="sendTime" column="sendTime"/>
        </association>
        <collection property="soldBaobeis" column="id" javaType="java.util.ArrayList" ofType="SoldBaobei">
            <id property="id" column="SoldBaobei.id"/>
            <result property="orderId" column="id"/>
            <result property="baobeiId" column="baobeiId"/>
            <result property="quantity" column="quantity"/>
            <result property="color" column="color"/>
            <result property="spec" column="spec"/>
            <result property="name" column="name"/>
            <result property="purchasePrice" column="purchasePrice"/>
            <result property="salePrice" column="salePrice"/>
        </collection>
    </resultMap>

    <resultMap id="resultOrderById" type="Order" extends="resultBase">
        <collection property="soldBaobeis" column="id" javaType="java.util.ArrayList" ofType="SoldBaobei" select="tbgt.persistence.SoldBaobeiMapper.getSoldBaobeiByOrderNo">

        </collection>
    </resultMap>



    <sql id="orderColumns"> ORDERS.id,address,orderNo,contactPerson,phone,actualPrice,soldTime,agencyFee,
 express.id ,expressNo,
 fee,sendTime,SoldBaobei.id,baobeiId,quantity,color,
 spec,name,purchasePrice,salePrice </sql>

    <select id="getOrders" parameterType="java.util.Map" resultMap="resultOrders">
      SELECT <include refid="orderColumns"/> FROM ORDERS
        LEFT JOIN EXPRESS ON ORDERS.ID = EXPRESS.ORDERID
        LEFT JOIN SOLDBAOBEI ON ORDERS.ID = SOLDBAOBEI.ORDERID
        <trim prefix="WHERE" prefixOverrides="AND|OR">
            <if test="name != null and name != ''">
                SOLDBAOBEI.name like CONCAT(CONCAT('%', #{name}),'%')
            </if>
            <choose>
              <when test='expressInd == "Y"'>
                    and EXPRESS.id is not null
                </when>
                <when test='expressInd == "N"'>
                    and EXPRESS.id is null
                </when>
            </choose>
            <if test="fromDate != null">
                and ORDERS.soldTime &gt;= #{fromDate}
            </if>
            <if test="toDate != null">
                and ORDERS.soldTime &lt;= #{toDate}
            </if>
        </trim>
        <trim prefix="ORDER BY">
            <if test="sort != null and sort != ''">
                ${sort} ${direction}
            </if>
        </trim>
    </select>

    <insert id="saveOrder" parameterType="Order">
		INSERT INTO orders (address,orderNo,contactPerson,phone,actualPrice,soldTime,agencyFee)
    	VALUE (#{address},#{orderNo},#{contactPerson},#{phone},#{actualPrice},#{soldTime},#{agencyFee})
        <selectKey keyProperty="id" resultType="int" order="AFTER">
                   SELECT LAST_INSERT_ID();
        </selectKey>

	</insert>

    <update id="updateOrder" parameterType="Order">
  		UPDATE orders
  		SET
  			address = #{address},
			orderNo = #{orderNo},
			contactPerson = #{contactPerson},
			phone = #{phone},
			actualPrice = #{actualPrice},
			soldTime = #{soldTime},
			agencyFee =#{agencyFee}
  		where id = #{id}
	</update>

    <select id="getOrderById" resultMap="resultOrderById" parameterType="int">
		SELECT * FROM orders where id=#{id};
	</select>

    <delete id="deleteOrder" parameterType="int">
		DELETE FROM orders where id=#{id};
	</delete>
</mapper>