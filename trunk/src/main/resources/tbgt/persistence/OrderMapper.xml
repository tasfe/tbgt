<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="tbgt.persistence.OrderMapper">

    <resultMap id="resultBase" type="Order">
        <id property="id" column="id"/>
        <result property="receiver_state" column="receiver_state"/>
        <result property="receiver_address" column="receiver_address"/>
        <result property="buyer_msg" column="buyer_msg"/>
        <result property="actualPrice" column="actualPrice"/>
        <result property="pay_time" column="pay_time"/>
        <result property="end_time" column="end_time"/>
        <result property="status" column="status"/>
        <result property="modified" column="modified"/>
        <result property="seller_memo" column="seller_memo"/>
    </resultMap>

    <resultMap id="resultOrders" type="Order" extends="resultBase">
        <association property="express" column="id" javaType="Express">
            <id property="id" column="express_id"/>
            <result property="orderId" column="id"/>
            <result property="expressNo" column="expressNo"/>
            <result property="fee" column="fee"/>
            <result property="giftFee" column="giftFee"/>
            <result property="sendTime" column="sendTime"/>
            <result property="agencyFee" column="agencyFee"/>
        </association>
        <collection property="soldBaobeis" column="id" javaType="java.util.ArrayList" ofType="SoldBaobei">
            <id property="id" column="soldbaobei_id"/>
            <result property="tid" column="id"/>
            <result property="bbid" column="bbid"/>
            <result property="quantity" column="quantity"/>
            <result property="sku_id" column="sku_id"/>
            <result property="sku_properties_name" column="sku_properties_name"/>
            <result property="title" column="title"/>
            <result property="weight" column="weight"/>
            <result property="purchase_price" column="purchase_price"/>
            <result property="price" column="price"/>
        </collection>
    </resultMap>

    <resultMap id="resultOrderById" type="Order" extends="resultBase">
        <association property="express" column="id" javaType="Express"
                     select="tbgt.persistence.ExpressMapper.getExpressByOrderId"/>
        <collection property="soldBaobeis" column="id" javaType="java.util.ArrayList" ofType="SoldBaobei" select="tbgt.persistence.SoldBaobeiMapper.getSoldBaobeiByOrderId">

        </collection>

    </resultMap>



    <sql id="orderColumns"> orders.id,receiver_address,receiver_state,buyer_msg,actualPrice,pay_time,end_time,agencyFee,status, modified,seller_memo,
 express.id as express_id ,expressNo,
 fee,giftFee,sendTime,soldbaobei.id as soldbaobei_id,bbid,quantity,sku_id,sku_properties_name,
 title,weight,purchase_price,price </sql>

    <select id="getOrders" parameterType="java.util.Map" resultMap="resultOrders">
      select <include refid="orderColumns"/> from orders
        left join express on orders.id = express.orderid
        left join soldbaobei on orders.id = soldbaobei.tid
        <trim prefix="WHERE" prefixOverrides="AND|OR">
            <if test="name != null and name != ''">
                soldbaobei.title like CONCAT(CONCAT('%', #{name}),'%') or orders.receiver_address like CONCAT(CONCAT('%', #{name}),'%')  or orders.id like CONCAT(CONCAT('%', #{name}),'%')
            </if>
            <if test="statuses != null ">
                and orders.status in
                <foreach item="item" index="index" collection="statuses" open="(" separator="," close=")">
                      #{item}
                </foreach>
            </if>
            <if test="fromDate != null">
                and orders.pay_time &gt;= #{fromDate}
            </if>
            <if test="toDate != null">
                and orders.pay_time &lt;= #{toDate}
            </if>
        </trim>
        <trim prefix="ORDER BY">
            <if test="sort != null and sort != ''">
                ${sort} ${direction}
            </if>
        </trim>
    </select>

    <insert id="saveOrder" parameterType="Order">
		INSERT INTO orders (id,receiver_state,receiver_address,buyer_msg,seller_memo,actualPrice,pay_time,end_time,status,modified)
    	VALUE (#{id},#{receiver_state},#{receiver_address},#{buyer_msg},#{seller_memo},#{actualPrice},#{pay_time},#{end_time},#{status},#{modified})

	</insert>

    <update id="updateOrder" parameterType="Order">
  		UPDATE orders
  		SET
			receiver_state =#{receiver_state},
			receiver_address =#{receiver_address},
			buyer_msg =#{buyer_msg},
			actualPrice =#{actualPrice},
			pay_time =#{pay_time},
			end_time =#{end_time},
			modified =#{modified},
			seller_memo =#{seller_memo},
			status =#{status}
  		where id = #{id}
	</update>
    <select id="getOrderById" resultMap="resultOrderById" parameterType="long">
		SELECT * FROM orders where id=#{id};
	</select>

     <select id="getAllOrders" resultMap="resultBase">
		SELECT * FROM orders;
	</select>

    <select id="getAllNotClosedOrders" resultMap="resultBase">
		SELECT * FROM orders where status in ('WAIT_SELLER_SEND_GOODS','WAIT_BUYER_CONFIRM_GOODS');
	</select>

    <resultMap id="ordersForSend" type="java.util.HashMap">
        <result property="orderid" column="orderid"/>
        <result property="expressno" column="expressno"/>
    </resultMap>
    <select id="getPendingSendOrders" resultMap="ordersForSend">
		SELECT orders.id as orderid, express.expressno as expressno FROM orders join  express on express.orderid = orders.id where orders.status in ('WAIT_SELLER_SEND_GOODS') and express.expressno is not null
	</select>

    <delete id="deleteOrder" parameterType="long">
		DELETE FROM orders where id=#{id};
	</delete>

    <update id="updateStatus" parameterType="java.util.Map">
  		UPDATE orders
  		SET
  			status = #{status}
  		where id = #{orderId}
	</update>
</mapper>